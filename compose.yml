---
services:
  reverse-proxy:
    image: ghcr.io/jeromba6/fs-2025-01-docker/reverse-proxy:${VERSION}
    container_name: reverse-proxy
    ports:
      - 80:80
      - 443:443
    depends_on:
      - static-webserver
      - ${API_SERVER1_NAME}
      - ${API_SERVER2_NAME}
    build:
      context: reverse-proxy
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/health", "-k"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  static-webserver:
    image: ghcr.io/jeromba6/fs-2025-01-docker/static-webserver:${VERSION}
    container_name: static-webserver
    build:
      context: static-webserver
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  api-server1:
    image: ghcr.io/jeromba6/fs-2025-01-docker/api-server:${VERSION}
    container_name: ${API_SERVER1_NAME}
    build:
      context: api-server
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    environment:
      PORT: ${API_SERVER1_PORT}

  api-server2:
    image: ghcr.io/jeromba6/fs-2025-01-docker/api-server:${VERSION}
    container_name: ${API_SERVER2_NAME}
    # No build context specified, using the same image as api-server1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    environment:
      PORT: ${API_SERVER2_PORT}

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: ghcr.io/jeromba6/fs-2025-01-docker/promtail:${VERSION}
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /etc/machine-id:/etc/machine-id
      - /etc/hostname:/etc/hostname
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
