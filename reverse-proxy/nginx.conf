daemon off;

user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;

    gzip on;

    server {

        listen 80 default_server;
        listen [::]:80 default_server;

        server_name ssl_redirect;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        error_log /dev/stdout info;
        access_log /dev/stdout;

        root /var/www/html;
        index index.html;

        server_name reverse_proxy;

        add_header X-Frame-Options DENY;
        add_header Content-Security-Policy "default-src 'self'";
        # Optional: Add other security headers
        # add_header X-Content-Type-Options nosniff;
        # add_header X-XSS-Protection "1; mode=block";
        # add_header Referrer-Policy no-referrer-when-downgrade;


        location / {
            limit_except GET HEAD POST {
                deny all;
            }
            proxy_pass http://static-webserver:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
